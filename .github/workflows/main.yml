name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_notes_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: Амангелді_Айдос_Задание_15
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        working-directory: Амангелді_Айдос_Задание_15
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_notes_db
          REDIS_URL: redis://localhost:6379/0
          TEST_DB_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/test_notes_db
        run: pytest tests

      - name: Build Docker image
        working-directory: Амангелді_Айдос_Задание_15
        run: docker build -t my-notes-app:latest -f dockerfile .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag my-notes-app:latest ${{ secrets.DOCKER_USERNAME }}/my-notes-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-notes-app:latest